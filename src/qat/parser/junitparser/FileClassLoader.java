package qat.parser.junitparser;// JDK importsimport java.io.*;import java.security.*;// qat importsimport qat.parser.TestFinderInterface;import qat.parser.ParserInterface;public class FileClassLoader extends SecureClassLoader {    private String searchRoot;    public FileClassLoader(String searchRoot) {	this.searchRoot = searchRoot;    }    public Class findClass(String name) throws ClassNotFoundException {	try {	    byte[] b = loadClassData(name);	    return defineClass(name, b, 0, b.length);	}	catch (IOException ioe) {	    throw new ClassNotFoundException(ioe.toString());	}    }        private byte[] loadClassData(String name) throws IOException {	//System.out.println("Trying to load "+searchRoot+File.separator+name.replace('.',File.separator.charAt(0))+".class");	File classFile = new File(searchRoot+File.separator+name.replace('.',File.separator.charAt(0))+".class");	byte[] classBytes = new byte[(int)classFile.length()];	InputStream in = new BufferedInputStream(new FileInputStream(classFile));	in.read(classBytes,0,classBytes.length);	in.close();	return classBytes;    }    }